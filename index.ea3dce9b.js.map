{"mappings":"AAAqB,IAAIA,gBAAgB,CACrCC,OAAQ,wCCGZ,MAAMC,EAASC,SAASC,cAAc,iBACtCC,QAAQC,IAAIJ,GACZ,MAAMK,EAAUJ,SAASC,cAAc,aACvCC,QAAQC,IAAIC,GACZL,EAAOM,iBAAiB,UAgCxB,WACI,IAAIC,EAAUP,EAAOQ,MACrBL,QAAQM,IAAIF,GACZ,IAAIG,EAAKV,EAAOW,cAChBR,QAAQM,IAAIC,GAIZ,OAAOE,MAFO,wDAAwDL,IAEnD,CAACM,QAAS,CAC7B,YAZY,2EAcPC,MAAMC,IAEP,GADIZ,QAAQM,IAAIM,IACXA,EAASC,GACd,MAAM,IAAIC,MAAMF,EAASG,QAEzB,OAAOH,EAASI,MAAM,IAErBL,MAAMM,IAEPjB,QAAQM,IAAIW,GACZA,EAAOC,EAAaX,GACpBP,QAAQM,IAAIW,GAEZjB,QAAQM,IAAIY,EAAaX,GAAIY,MAC7BnB,QAAQM,IAAIY,EAAaX,GAAIa,aAC7BpB,QAAQM,IAAIY,EAAaX,GAAIc,aAC7BrB,QAAQM,IAAIY,EAAaX,GAAIe,MAAMC,KAE/BC,EAAaN,EAAaX,GAAI,IAGrCkB,OAAOC,GAAU1B,QAAQM,IAAIoB,I,IA5DlC,IAAIR,EAAe,GDCRT,MAPI,sCAOS,CAACC,QAAS,CAC9B,YANY,2EAQPC,MAAMC,IAEP,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAMF,EAASG,QAEzB,OAAOH,EAASI,MAAM,ICJzBL,MAAMM,IAEPA,EAAOA,EAAKU,QAAOC,I,IAAOC,EAAA,OAAgB,OAAP,QAATA,EAAAD,EAAIN,aAAK,IAATO,OAAA,EAAAA,EAAWN,IAAS,IAC9CL,EAAeD,EAEf,IAAK,IAAIa,EAAI,EAAGA,EAAIZ,EAAaa,OAAQD,IAAK,CAC1C,MAAME,EAAQd,EAAaY,GAC3B,IAAIG,EAASnC,SAASoC,cAAc,UAEhCF,EAAMV,QAEVW,EAAO5B,MAAQ2B,EAAMzB,GACrB0B,EAAOE,UAAY,GAAGH,EAAMb,OAC5BtB,EAAOuC,YAAYH,G,KAItBR,OAAOC,GAAU1B,QAAQM,IAAIoB,KA0ClC,SAASF,IAEL,MAAMF,EAAQxB,SAASoC,cAAc,OACrCZ,EAAMe,IAAM,GAAGnB,EAAaX,IAAIe,MAAMC,MACtCvB,QAAQM,IAAIgB,GACZ,MAAMgB,EAAQxC,SAASoC,cAAc,MACrCI,EAAMC,YAAc,GAAGrB,EAAaX,IAAIY,OACxCmB,EAAME,MAAMC,SAAW,OAEvB,MAAMrB,EAActB,SAASoC,cAAc,KAC3Cd,EAAYmB,YAAc,GAAGrB,EAAaX,IAAIa,cAE9C,MAAMC,EAAcvB,SAASoC,cAAc,MAC3Cb,EAAYkB,YAAc,gBAAgBrB,EAAaX,IAAIc,cAE3DnB,EAAQwC,OAAOpB,EAAOgB,EAAOlB,EAAaC,E","sources":["src/js/cat-api.js","src/index.js"],"sourcesContent":["const searchParams = new URLSearchParams({\n    fields: 'id,name,temperament,description,url',\n});\n\n\n\nconst breeds = `https://api.thecatapi.com/v1/breeds`;\nconst breed = 'https://api.thecatapi.com/v1/images/search?breed_ids={breed.id}'\nconst api_key = \"live_CIw3lZRkcpgh759C9YBXivIvAETipzFqRyXtOHa4sXukf5xIGdNG9JZOQ72DPlKH\"\n\n\n\nexport function fetchBreeds() {\n    return fetch(breeds,{headers: {\n    'x-api-key': api_key\n    }})\n        .then((response) => {\n            // console.log(response)\n        if (!response.ok) {\n        throw new Error(response.status);\n        }\n        return response.json();\n    })\n};\n\nexport function fetchCatByBreed() {\n    let breed_ids = select.value;\n    return fetch(breed,{headers: {\n    'x-api-key': api_key\n    }})\n        .then((response) => {\n            // console.log(response)\n        if (!response.ok) {\n        throw new Error(response.status);\n        }\n        return response.json();\n        })\n    \n};\n\n\n// https://api.thecatapi.com/v1/images/search?breed_ids={breed.id}\n\n// ?${searchParams}\n        // \"breeds\": \n\n        //         \"id\": \"acur\",\n        //         \"name\": \"American Curl\",\n                \n        //         \"temperament\": \"Affectionate, Curious, Intelligent, Interactive, Lively, Playful, Social\",\n             \n        //         \"description\": \"Distinguished by truly unique ears that curl back in a graceful arc, offering an alert, perky, happily surprised expression, they cause people to break out into a big smile when viewing their first Curl. Curls are very people-oriented, faithful, affectionate soulmates, adjusting remarkably fast to other pets, children, and new situations.\",\n\n        // \"id\": \"ji-5E0VwY\",\n        // \"url\": \"https://cdn2.thecatapi.com/images/ji-5E0VwY.jpg\",\n\n\n// +++++++++++++\n// fetch(url,{headers: {\n//     'x-api-key': api_key\n//     }})\n//     .then((response) => {\n//         if (!response.ok) {\n//             throw new Error(resp.statusaText)\n//         }\n//         // console.log(response);\n//         return response.json();\n//     })\n// .then((data) => {\n//    //filter to only include those with an `image` object\n//     data = data.filter(img => img.image?.url!=null)\n// //    console.log(data)\n//     storedBreeds = data;\n//     console.log(storedBreeds);\n//     for (let i = 0; i < storedBreeds.length; i++) {\n//     const breed = storedBreeds[i];\n//     let option = document.createElement('option'); \n//      //skip any breeds that don't have an image\n//     if(!breed.image)continue\n//     //use the current array index\n//     option.value = i;\n//     option.innerHTML = `${breed.name}`;\n//     select.appendChild(option);\n//     }\n// //    show the first breed by default\n// //    console.log(showBreedImage())\n//     console.dir(select)\n// })\n// .catch(function(error) {\n// //    console.log(error);\n// });\n\n// function showBreedImage(index) {\n//     document.getElementById(\"#breed_image\").src = storedBreeds[index].image.url\n//     document.getElementById(\"#breed_json\").textContent = storedBreeds[index].temperament\n\n// }\n// ++++++++++++++\n","import './css/styles.css';\nimport { fetchBreeds } from \"./js/cat-api\";\n\n\nconst select = document.querySelector('.breed-select')\nconsole.dir(select)\nconst catInfo = document.querySelector('.cat-info')\nconsole.dir(catInfo);\nselect.addEventListener('change', fetchCatByBreed);\n// select.text \n\n\nlet storedBreeds = [];\n\n\n\nfetchBreeds()\n    .then((data) => {\n        \n    data = data.filter(img => img.image?.url!=null)\n    storedBreeds = data;\n    // console.log(storedBreeds);\n    for (let i = 0; i < storedBreeds.length; i++) {\n        const breed = storedBreeds[i];\n        let option = document.createElement('option'); \n        //skip any breeds that don't have an image\n        if(!breed.image)continue\n        //use the current array index\n        option.value = breed.id;\n        option.innerHTML = `${breed.name}`;\n        select.appendChild(option);\n        // fetchCatByBreed(0) \n    };\n    })\n    .catch((error) => console.log(error)); \n\n\nconst api_key = \"live_CIw3lZRkcpgh759C9YBXivIvAETipzFqRyXtOHa4sXukf5xIGdNG9JZOQ72DPlKH\"\n\n\nfunction fetchCatByBreed() {\n    let breedId = select.value\n    console.log(breedId)\n    let id = select.selectedIndex\n    console.log(id)\n    \n    const breed = `https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}` \n    \n    return fetch(breed,{headers: {\n    'x-api-key': api_key\n    }})\n        .then((response) => {\n            console.log(response)\n        if (!response.ok) {\n        throw new Error(response.status);\n        }\n        return response.json();\n        })\n        .then((data) => {\n        \n        console.log(data)\n        data = storedBreeds[id]\n        console.log(data)\n    \n        console.log(storedBreeds[id].name)\n        console.log(storedBreeds[id].description)\n        console.log(storedBreeds[id].temperament)\n        console.log(storedBreeds[id].image.url)\n            \n            renderBreeds(storedBreeds[id])\n    })\n        \n    .catch((error) => console.log(error))\n};\n\n\nfunction renderBreeds() { \n\n    const image = document.createElement('img');\n    image.src = `${storedBreeds[id].image.url}`;\n    console.log(image)\n    const title = document.createElement('h2');\n    title.textContent = `${storedBreeds[id].name}`;\n    title.style.fontSize = `${80}px`;\n\n    const description = document.createElement('p');\n    description.textContent = `${storedBreeds[id].description}`;\n\n    const temperament = document.createElement('h3')\n    temperament.textContent = `Temperament: ${storedBreeds[id].temperament}`;\n\n    catInfo.append(image, title, description, temperament);\n};\n\n\n// renderBreeds()\n// function renderBreeds(data) { \n//     const markup = data.map((elem) => {\n    \n//         // `<div>\n//         // <img src=\"${storedBreeds[0].image.url}\" alt=\"\" id=\"breed_image\">\n//         // </div>\n//         `<div id=\"breed_json\">\n//         <h2>\"${storedBreeds[0].name}\"</h2>\n//         <p>\"${storedBreeds[0].description}\"</p>\n//         <h3>\"${storedBreeds[0].temperament}\"</h3>\n//         </div>`\n//     }).json('');\n//     catInfo.insertAdjacentHTML(\"beforeend\", markup);\n// };\n\n// const param = { name, image:url, description, temperament}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// fetch(url,{headers: {\n//     'x-api-key': api_key\n//     }})\n//     .then((response) => {\n//         if (!response.ok) {\n//             throw new Error(resp.statusaText)\n//         }\n//         // console.log(response);\n//         return response.json();\n//     })\n// .then((data) => {\n//    //filter to only include those with an `image` object\n//     data = data.filter(img => img.image?.url!=null)\n// //    console.log(data)\n//     storedBreeds = data;\n//     console.log(storedBreeds);\n//     for (let i = 0; i < storedBreeds.length; i++) {\n//     const breed = storedBreeds[i];\n//     let option = document.createElement('option'); \n//      //skip any breeds that don't have an image\n//     if(!breed.image)continue\n//     //use the current array index\n//     option.value = i;\n//     option.innerHTML = `${breed.name}`;\n//     select.appendChild(option);\n//     }\n// //    show the first breed by default\n// //    console.log(showBreedImage())\n//     console.dir(select)\n// })\n// .catch(function(error) {\n// //    console.log(error);\n// });\n\n// function showBreedImage(index) {\n//     document.getElementById(\"#breed_image\").src = storedBreeds[index].image.url\n//     document.getElementById(\"#breed_json\").textContent = storedBreeds[index].temperament\n\n// }\n\n\n// select.addEventListener('input', onSearch)\n\n// function onSearch(evt) {\n//     const { sity, day } = evt.currentTarget.elements;\n//     console.log\n//     getWeather(sity.value, day.value)\n//         .then((data) => createMark(data.forcast.forcastday))\n//         .catch((error) => console.log(error))\n// }\n\n\n\n\n\n\n/* <div>\n<img id=\"breed_image\"></img>\n</div> */\n\n/* <div id=\"breed_json\"></div> */\n\n\n\n// document.getElementById(\"breed_image\").src = storedBreeds[index].image.url;\n\n\n\n// const markup = cars.map(({ id = \"none\", modal, type, price, img }) =>\n//     `<li data-id=\"${id}\">\n//     <img src=\"${img}\" alt=\"${modal}\" class=\"img\" />\n//     <h2>Mark: ${modal}</h2>\n//     <h3>Type: ${type}</h3>\n//     <p>Price: ${price}</p>\n// </li>`\n// ).join('');\n// container.insertAdjacentHTML(\"beforeend\", markup);"],"names":["URLSearchParams","fields","$1f0dc3b9307be026$var$select","document","querySelector","console","dir","$1f0dc3b9307be026$var$catInfo","addEventListener","breedId","value","log","id","selectedIndex","fetch","headers","then","response","ok","Error","status","json","data","$1f0dc3b9307be026$var$storedBreeds","name","description","temperament","image","url","$1f0dc3b9307be026$var$renderBreeds","catch","error","filter","img","ref","i","length","breed","option","createElement","innerHTML","appendChild","src","title","textContent","style","fontSize","append"],"version":3,"file":"index.ea3dce9b.js.map"}