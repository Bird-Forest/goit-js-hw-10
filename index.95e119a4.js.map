{"mappings":"YAAA,IAAMA,EAAe,IAAIC,gBAAgB,CACrCC,OAAQ,wCAENC,EAAM,uCAAoDC,OAAbJ,GCCnD,IAAMK,EAASC,SAASC,cAAc,iBACtCC,QAAQC,IAAIJ,GACZ,IAAMK,EAAUJ,SAASC,cAAc,aACvCC,QAAQC,IAAIC,GAEZ,IAAIC,EAAe,GAEnBN,EAAOO,iBAAiB,SAAS,SAACC,GAC9BL,QAAQM,IAAID,EAAIE,cAAcC,S,IDHvBC,MAAMd,EAAI,CAACe,QAAS,CAC3B,YANY,2EAQPC,MAAK,SAACC,GAEP,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAMF,EAASG,QAEzB,OAAOH,EAASI,M,ICDnBL,MAAK,SAACM,GACPjB,QAAQM,IAAIW,GACZA,EAAOA,EAAKC,QAAO,SAAAC,G,IAAOC,EAAA,OAAgB,OAAP,QAATA,EAAAD,EAAIE,aAAK,IAATD,OAAA,EAAAA,EAAWE,I,IACrCnB,EAAec,EACfjB,QAAQM,IAAIH,GACZ,IAAK,IAAIoB,EAAI,EAAGA,EAAIpB,EAAaqB,OAAQD,IAAK,CAC1C,IAAME,EAAQtB,EAAaoB,GACvBG,EAAS5B,SAAS6B,cAAc,UAEhCF,EAAMJ,QAEVK,EAAOE,MAAQL,EACfG,EAAOG,UAAY,GAAcjC,OAAX6B,EAAMK,MAC5BjC,EAAOkC,YAAYL,G,KAGtBM,OAAM,SAACC,G,OAAUjC,QAAQM,IAAI2B,E","sources":["src/js/cat-api.js","src/index.js"],"sourcesContent":["const searchParams = new URLSearchParams({\n    fields: 'name,image,description,temperament,',\n});\nconst url = `https://api.thecatapi.com/v1/breeds?${searchParams}`;\nconst api_key = \"live_CIw3lZRkcpgh759C9YBXivIvAETipzFqRyXtOHa4sXukf5xIGdNG9JZOQ72DPlKH\"\n\n\n\nexport function fetchBreeds() {\n    return fetch(url,{headers: {\n    'x-api-key': api_key\n    }})\n        .then((response) => {\n            // console.log(response)\n        if (!response.ok) {\n        throw new Error(response.status);\n        }\n        return response.json();\n    })\n};\n\n\n\n\n// https://api.thecatapi.com/v1/images/search?breed_ids={breed.id}\n\n\n\n// +++++++++++++\n// fetch(url,{headers: {\n//     'x-api-key': api_key\n//     }})\n//     .then((response) => {\n//         if (!response.ok) {\n//             throw new Error(resp.statusaText)\n//         }\n//         // console.log(response);\n//         return response.json();\n//     })\n// .then((data) => {\n//    //filter to only include those with an `image` object\n//     data = data.filter(img => img.image?.url!=null)\n// //    console.log(data)\n//     storedBreeds = data;\n//     console.log(storedBreeds);\n//     for (let i = 0; i < storedBreeds.length; i++) {\n//     const breed = storedBreeds[i];\n//     let option = document.createElement('option'); \n//      //skip any breeds that don't have an image\n//     if(!breed.image)continue\n//     //use the current array index\n//     option.value = i;\n//     option.innerHTML = `${breed.name}`;\n//     select.appendChild(option);\n//     }\n// //    show the first breed by default\n// //    console.log(showBreedImage())\n//     console.dir(select)\n// })\n// .catch(function(error) {\n// //    console.log(error);\n// });\n\n// function showBreedImage(index) {\n//     document.getElementById(\"#breed_image\").src = storedBreeds[index].image.url\n//     document.getElementById(\"#breed_json\").textContent = storedBreeds[index].temperament\n\n// }\n// ++++++++++++++\n","import './css/styles.css';\nimport { fetchBreeds } from \"./js/cat-api\";\n\n\nconst select = document.querySelector('.breed-select')\nconsole.dir(select)\nconst catInfo = document.querySelector('.cat-info')\nconsole.dir(catInfo);\n// select.addEventListener('input', fetchCatByBreed);\nlet storedBreeds = [];\n\nselect.addEventListener('input', (evt) => {\n    console.log(evt.currentTarget.elements)\n});\n\nfetchBreeds()    \n    .then((data) => {\n    console.log(data)\n    data = data.filter(img => img.image?.url!=null)\n    storedBreeds = data;\n    console.log(storedBreeds);\n    for (let i = 0; i < storedBreeds.length; i++) {\n        const breed = storedBreeds[i];\n        let option = document.createElement('option'); \n        //skip any breeds that don't have an image\n        if(!breed.image)continue\n        //use the current array index\n        option.value = i;\n        option.innerHTML = `${breed.name}`;\n        select.appendChild(option);\n    };\n    })\n    .catch((error) => console.log(error)); \n\n\nfunction renderBreeds() { \n    const markup = storedBreeds.map(({ name, image:url, description, temperament}) => {\n        return\n        `<div>\n        <img src=\"${url}\" alt=\"\" id=\"breed_image\">\n        </div>\n        <div id=\"breed_json\">\n        <h2>${name}</h2>\n        <p>${description}</p>\n        <h3>${temperament}</h3>\n        </div>`\n    }).json('');\n    catInfo.innerHTML = markup;\n};\n\n\n\n// const param = { name, image:url, description, temperament}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// fetch(url,{headers: {\n//     'x-api-key': api_key\n//     }})\n//     .then((response) => {\n//         if (!response.ok) {\n//             throw new Error(resp.statusaText)\n//         }\n//         // console.log(response);\n//         return response.json();\n//     })\n// .then((data) => {\n//    //filter to only include those with an `image` object\n//     data = data.filter(img => img.image?.url!=null)\n// //    console.log(data)\n//     storedBreeds = data;\n//     console.log(storedBreeds);\n//     for (let i = 0; i < storedBreeds.length; i++) {\n//     const breed = storedBreeds[i];\n//     let option = document.createElement('option'); \n//      //skip any breeds that don't have an image\n//     if(!breed.image)continue\n//     //use the current array index\n//     option.value = i;\n//     option.innerHTML = `${breed.name}`;\n//     select.appendChild(option);\n//     }\n// //    show the first breed by default\n// //    console.log(showBreedImage())\n//     console.dir(select)\n// })\n// .catch(function(error) {\n// //    console.log(error);\n// });\n\n// function showBreedImage(index) {\n//     document.getElementById(\"#breed_image\").src = storedBreeds[index].image.url\n//     document.getElementById(\"#breed_json\").textContent = storedBreeds[index].temperament\n\n// }\n\n\n// select.addEventListener('input', onSearch)\n\n// function onSearch(evt) {\n//     const { sity, day } = evt.currentTarget.elements;\n//     console.log\n//     getWeather(sity.value, day.value)\n//         .then((data) => createMark(data.forcast.forcastday))\n//         .catch((error) => console.log(error))\n// }\n\n\n\n\n\n\n/* <div>\n<img id=\"breed_image\"></img>\n</div> */\n\n/* <div id=\"breed_json\"></div> */\n\n\n\n// document.getElementById(\"breed_image\").src = storedBreeds[index].image.url;\n\n\n\n// const markup = cars.map(({ id = \"none\", modal, type, price, img }) =>\n//     `<li data-id=\"${id}\">\n//     <img src=\"${img}\" alt=\"${modal}\" class=\"img\" />\n//     <h2>Mark: ${modal}</h2>\n//     <h3>Type: ${type}</h3>\n//     <p>Price: ${price}</p>\n// </li>`\n// ).join('');\n// container.insertAdjacentHTML(\"beforeend\", markup);"],"names":["$8994e83c1b13b9e2$var$searchParams","URLSearchParams","fields","$8994e83c1b13b9e2$var$url","concat","$b8f9b7833fa37166$var$select","document","querySelector","console","dir","$b8f9b7833fa37166$var$catInfo","$b8f9b7833fa37166$var$storedBreeds","addEventListener","evt","log","currentTarget","elements","fetch","headers","then","response","ok","Error","status","json","data","filter","img","ref","image","url","i","length","breed","option","createElement","value","innerHTML","name","appendChild","catch","error"],"version":3,"file":"index.95e119a4.js.map"}